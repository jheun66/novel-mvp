---
description: 
globs: 
alwaysApply: false
---
# Git 커밋 메시지 규칙

이 프로젝트는 [Conventional Commits](mdc:https:/www.conventionalcommits.org) 스펙을 따릅니다.

## 커밋 메시지 구조

```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

## 커밋 타입

### 필수 타입
- `feat`: 새로운 기능 추가
- `fix`: 버그 수정

### 추가 타입
- `docs`: 문서 수정
- `style`: 코드 포맷팅, 세미콜론 누락 등 (기능 변경 없음)
- `refactor`: 코드 리팩토링 (기능 변경 없음)
- `perf`: 성능 개선
- `test`: 테스트 추가 또는 수정
- `build`: 빌드 시스템 또는 외부 종속성 변경
- `ci`: CI 설정 파일 및 스크립트 변경
- `chore`: 기타 변경사항

## 규칙

1. 제목은 명령문으로 작성 (예: "추가한다" 대신 "추가")
2. 제목은 50자 이내로 작성
3. 제목 끝에 마침표(.) 사용하지 않음
4. 본문은 72자마다 줄바꿈
5. 본문에는 '무엇을', '왜' 변경했는지 설명
6. Breaking Change가 있는 경우 `!`를 타입 뒤에 추가하거나 footer에 명시

## 예시

### 기능 추가
```
feat: 사용자 프로필 이미지 업로드 기능 추가
```

### 버그 수정
```
fix: 로그인 실패 시 에러 메시지 표시 안되는 문제 수정
```

### Breaking Change
```
feat!: API 응답 형식 변경

BREAKING CHANGE: API 응답이 배열에서 객체 형식으로 변경되었습니다.
기존: [{ id: 1, name: "test" }]
변경: { data: [{ id: 1, name: "test" }], total: 1 }
```

## 프로젝트별 추가 규칙

- scope는 영어 소문자로 작성
- 한글 커밋 메시지 사용 권장
- 이슈 번호가 있는 경우 footer에 `Refs: #123` 형식으로 추가
